from typing import overload, Any, NamedTuple, Text, Tuple

import wx


class RealPoint(object):
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, x: float, y: float) -> None: ...
    @overload
    def __init__(self, pt: wx.Point) -> None: ...
    # def __init__(self, *args, **kw) -> None: ...

    def Get(self) -> Tuple[float, float]: ...
    def GetIM(self) -> NamedTuple: ...

    def __bool__(self) -> bool: ...
    def __eq__(self, other: Any) -> bool: ...
    def __getitem__(self, idx: Any) -> Any: ...
    def __len__(self) -> int: ...
    def __mul__(self, d: Any) -> wx.RealPoint: ...
    def __ne__(self, other: Any) -> bool: ...
    def __nonzero__(self) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __repr__(self) -> Any: ...
    def __setitem__(self, idx, val) -> Any: ...
    def __str__(self) -> Text: ...

    @overload
    def __iadd__(self, sz: wx.Size) -> wx.Unknown: ...
    @overload
    def __iadd__(self, pt: RealPoint) -> wx.Unknown: ...

    @overload
    def __isub__ (self, sz: wx.Size) -> wx.Unknown: ...
    @overload
    def __isub__(self, pt: wx.RealPoint) -> wx.Unknown: ...

    IM: NamedTuple
    x: float
    y: float

    ...
